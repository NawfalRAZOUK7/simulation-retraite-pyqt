[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "simulation-retraite-pyqt"
version = "0.1.0"
description = "Visual retirement simulation app (PyQt5, Matplotlib, Pandas)."
authors = [
    { name = "Ton Nom", email = "ton.email@example.com" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
keywords = ["simulation", "retraite", "PyQt5", "matplotlib", "pandas", "education", "visualization"]

dependencies = [
    "pyqt5>=5.15",
    "matplotlib>=3.5",
    "pandas>=1.3",
    "pytest>=7.0"
]

# Documentation, liens et métadonnées additionnelles
[project.urls]
Homepage = "https://github.com/tonuser/simulation-retraite-pyqt"
Documentation = "https://github.com/tonuser/simulation-retraite-pyqt/wiki"
Repository = "https://github.com/tonuser/simulation-retraite-pyqt"
Issues = "https://github.com/tonuser/simulation-retraite-pyqt/issues"

# Pour que pip trouve tes packages, même si tu as des sous-packages
[tool.setuptools.packages.find]
where = ["core", "ui", "utils"]
include = ["core*", "ui*", "utils*"]

# (Bonus) Pour inclure tous les fichiers de data/config et assets au package
[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"assets" = ["*.png"]
"data.config" = ["*.json"]
"data.output" = ["*.csv"]

# (Facultatif) Entrypoint pour une commande CLI, si tu veux plus tard
# [project.scripts]
# simulation-retraite = "main:main"

# Pour pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra"
testpaths = ["tests"]

